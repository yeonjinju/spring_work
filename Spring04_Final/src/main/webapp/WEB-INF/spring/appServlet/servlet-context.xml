<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- MyBatis 기반으로 DB 연동하기 위한 설정 -->
	<beans:bean id="dataSource" 
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/myoracle"/>
	</beans:bean>
	
	<beans:bean id="sessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="classpath:Configuration.xml"/>
	</beans:bean>


	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory" 
			ref="sessionFactory"/>
	</beans:bean>


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /r
	esources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.gura.spring04" />
	
	<!-- 로그인 인터셉터를 bean 으로 만들고  -->
	<beans:bean id="loginInterceptor" class="com.gura.spring04.interceptor.LoginInterceptor"/>
	<!-- 인터셉터 맵핑하기 -->
	<interceptors>
		<interceptor>
			<mapping path="/users/*"/>
			<exclude-mapping path="/users/signup_form"/>
			<exclude-mapping path="/users/signup"/>
			<exclude-mapping path="/users/loginform"/>
			<exclude-mapping path="/users/login"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/file/*"/>
			<exclude-mapping path="/file/list"/>
			<exclude-mapping path="/file/download"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/cafe/*"/>
			<exclude-mapping path="/cafe/list"/>
			<exclude-mapping path="/cafe/detail"/>
			<exclude-mapping path="/cafe/ajax_comment_list"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/gallery/*"/>
			<exclude-mapping path="/gallery/list"/>
			<exclude-mapping path="/gallery/detail"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 
		Multipart 폼 전송 처리를 위한 bean 설정 
		최대 업로드 사이즈 제한하기 
		name="maxUploadSize"  value="byte 단위" 
	-->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="102400000"/>
	</beans:bean>
	
	<!-- 
		bean 의 이름을 이용해서 view 로 이동할수 있도록 설정 
		setOrder(0) 는 0 순위로 찾아 가겠다는 의미 
		0 순위로 찾아서 없으면 
		views 폴더 안에서 jsp 페이지를 찾게 된다. 	
	-->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>
	
</beans:beans>













